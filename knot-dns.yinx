<?xml version="1.0" encoding="utf-8"?>
<module name="knot-dns"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:knot="http://www.nic.cz/ns/yang/knot-dns"
	xmlns:h="http://www.w3.org/1999/xhtml">
  <namespace uri="http://www.nic.cz/ns/yang/knot-dns"/>
  <prefix value="knot"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="dns-server">
    <prefix value="dnss"/>
  </import>
  <organization>
    <text>CZ.NIC, z. s. p. o.</text>
  </organization>
  <contact>
    <text>
      <h:p>
        Editor:   Ladislav Lhotka<h:br/>
                  &lt;mailto:lhotka@nic.cz&gt;
      </h:p>
    </text>
  </contact>
  <description>
    <text>
      This YANG module augments the 'dns-server' module with
      parameters specific for the Knot-DNS server.
    </text>
  </description>
  <reference>
    <text>https://www.knot-dns.cz/docs/2.0/html/</text>
  </reference>

  <revision date="2015-05-27">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>

  <!-- Identities -->

  <identity name="dnstap">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type performs query and response logging.
      </text>
    </description>
  </identity>

  <identity name="synth-record">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type is able to synthesize forward or
	reverse records.
      </text>
    </description>
  </identity>

  <identity name="dnsproxy">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type catches all unsatisfied queries and
	forwards them to another server.
      </text>
    </description>
  </identity>

  <identity name="rosedb">
    <base name="dnss:query-module-type"/>
    <description>
      <text>
	Query module of this type allows for overriding responses to
	certain queries before they are looked up in a zone.
      </text>
    </description>
  </identity>

  <!-- Groupings -->

  <grouping name="zone-options">
    <description>
      <text>Knot-specific zone options that are added to generic zone
      options.</text>
    </description>
    <leaf name="semantic-checks">
      <type name="boolean"/>
      <description>
	<text>
	  <h:p>Enable additional checks of zone data semantics
	  (failures are logged):</h:p>
	  <h:ul>
	    <h:li>missing NS record at the zone apex,</h:li>
	    <h:li>missing glue A or AAAA records,</h:li>
	    <h:li>broken or non-cyclic NSEC(3) chain,</h:li>
	    <h:li>wrong NSEC(3) type bitmap,</h:li>
	    <h:li>multiple NSEC records at the same node,</h:li>
	    <h:li>missing NSEC records at authoritative nodes,</h:li>
	    <h:li>extra record types under the same name as NSEC3
	    record (this is valid but Knot will not serve such a zone
	    correctly),</h:li>
	    <h:li>NSEC3-unsecured delegation that is not part of
	    Opt-out span,</h:li>
	    <h:li>wrong original TTL value in NSEC3 records,</h:li>
	    <h:li>wrong RDATA TTL value in RRSIG record.</h:li>
	    <h:li>signer name in RRSIG RR not the same as in
	    DNSKEY,</h:li>
	    <h:li>signed RRSIG,</h:li>
	    <h:li>not all RRs in node are signed,</h:li>
	    <h:li>wrong key flags or wrong key in RRSIG record (not
	    the same as ZSK).</h:li>
	  </h:ul>
	</text>
      </description>
    </leaf>
  </grouping>

  <grouping name="auto-dnssec-options">
    <description>
      <text>Knot-specific options for automatic DNSSEC signing.</text>
    </description>
    <leaf name="kasp-db">
      <type name="string"/>
      <description>
	<text>
	  <h:p>Path to Key and Signing Policy (KASP) database
	  directory.</h:p>
	  <h:p>Default: 'keys' subdirectory of the directory specified
	  in 'zones-dir'.</h:p>
	</text>
      </description>
    </leaf>
  </grouping>
  
  <grouping name="dnstap-config">
    <description>
      <text>
	<h:p>Configuration data for the 'dnstap' query module.</h:p>
	<h:p>This module performs query and response logging via the
	dnstap library.</h:p>
      </text>
    </description>
    <reference>
      <text>http://dnstap.info</text>
    </reference>
    <container name="dnstap">
      <presence value="dnstap query module"/>
      <choice name="sink">
	<description>
	  <text>
	    Destination for query/response logs, can be a file or Unix
	    domain socket.
	  </text>
	</description>
	<leaf name="file">
	  <type name="dnss:fs-path"/>
	  <description>
	    <text>File path.</text>
	  </description>
	</leaf>
	<leaf name="unix-socket">
	  <type name="dnss:fs-path"/>
	  <description>
	    <text>
	      Unix domain socket path.
	    </text>
	  </description>
	</leaf>
      </choice>
    </container>
  </grouping>

  <grouping name="synth-record-config">
    <description>
      <text>
	<h:p>Configuration data for the 'synth-record' query module.</h:p>
	<h:p>This module allows for synthesizing forward or reverse
	records for a given prefix and subnet.</h:p>
      </text>
    </description>
    <container name="synth-record">
      <presence value="synth-record query module"/>
      <leaf name="record-type">
	<type name="enumeration">
	  <enum name="forward">
	    <description>
	      <text>Forward records.</text>
	    </description>
	  </enum>
	  <enum name="reverse">
	    <description>
	      <text>Reverse records.</text>
	    </description>
	  </enum>
	</type>
	<mandatory value="true"/>
	<description>
	  <text>Type of the synthesized records.</text>
	</description>
      </leaf>
      <leaf name="prefix">
	<type name="string"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    <h:p>A prefix of the record owner.</h:p>
	    <h:p>Dots are not allowed, parts of a synthetic name must be
	    dash-separated.</h:p>
	    <h:p>TODO: regex pattern?</h:p>
	  </text>
	</description>
      </leaf>
      <leaf name="origin">
	<type name="inet:domain-name"/>
	<must condition="../record-type = 'reverse'">
	  <description>
	    <text>This parameter is only valid for reverse records.</text>
	  </description>
	  <error-message>
	    <value>origin is only valid for reverse records</value>
	  </error-message>
	</must>
	<description>
	  <text>Zone origin.</text>
	</description>
      </leaf>
      <leaf name="ttl">
	<type name="uint16"/>
	<units name="seconds"/>
	<default value="3600"/>
	<description>
	  <text>Time-to-live value of the generated records.</text>
	</description>
      </leaf>
      <leaf name="network">
	<type name="inet:ip-prefix"/>
	<description>
	  <text>Network subnet.</text>
	</description>
      </leaf>
    </container>
  </grouping>
  
  <grouping name="dnsproxy-config">
    <description>
      <text>
	<h:p>Configuration data for the 'dnsproxy' query module.</h:p>
	<h:p>This module catches all unsatisfied queries and forwards
	them to another server.</h:p>
      </text>
    </description>
    <container name="dnsproxy">
      <presence value="dnsproxy query module"/>
      <container name="remote-server">
	<uses name="dnss:endpoint-address"/>
      </container>
    </container>
  </grouping>

  <grouping name="rosedb-config">
    <description>
      <text>
	<h:p>Configuration data for the 'rosedb' query module.</h:p>
	<h:p>This module allows for answering certain queries from a
	database.</h:p>
      </text>
    </description>
    <container name="rosedb">
      <presence value="rosedb query module"/>
      <leaf name="db-dir">
	<type name="dnss:fs-path"/>
	<description>
	  <text>Path to the database directory.</text>
	</description>
      </leaf>
    </container>
  </grouping>
  
  <!-- Configuration data -->

  <augment target-node="/dnss:dns-server">
    <container name="logging">
      <description>
	<text>Logging options.</text>
      </description>
      <typedef name="severity">
	<description>
	  <text>Severity levels.</text>
	</description>
	<type name="enumeration">
	  <enum name="critical"/>
	  <enum name="error"/>
	  <enum name="warning"/>
	  <enum name="notice"/>
	  <enum name="info"/>
	  <enum name="debug"/>
	</type>
	<default value="warning"/>
      </typedef>
      <list name="log">
	<key value="name"/>
	<description>
	  <text>
	    <h:p>List of log options.</h:p>
	    <h:p>If no entry is present, messages with severity
	    'warning' or higher are logged to syslog and standard
	    error.</h:p>
	  </text>
	</description>
	<uses name="dnss:entry-name"/>
	<uses name="dnss:description"/>
	<choice name="target">
	  <mandatory value="true"/>
	  <leaf name="stdout">
	    <type name="empty"/>
	    <description>
	      <text>Standard output.</text>
	    </description>
	  </leaf>
	  <leaf name="stderr">
	    <type name="empty"/>
	    <description>
	      <text>Standard error.</text>
	    </description>
	  </leaf>
	  <leaf name="syslog">
	    <type name="empty"/>
	    <description>
	      <text>Syslog service.</text>
	    </description>
	  </leaf>
	  <leaf name="file">
	    <type name="dnss:fs-path"/>
	    <description>
	      <text>File name.</text>
	    </description>
	  </leaf>
	</choice>
	<leaf name="server">
	  <type name="severity"/>
	  <description>
	    <text>
	      Severity threshold for server-related messages. 
	    </text>
	  </description>
	</leaf>
	<leaf name="zone">
	  <type name="severity"/>
	  <description>
	    <text>
	      Severity threshold for zone-related messages. 
	    </text>
	  </description>
	</leaf>
	<leaf name="any">
	  <type name="severity"/>
	  <description>
	    <text>
	      Severity threshold for all messages.
	    </text>
	  </description>
	</leaf>
      </list>
    </container>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:server-options/dnss:resources">
    <description>
      <text>
	Configuration of Knot-specific server resources. 
      </text>
    </description>
    <leaf name="tcp-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) handling TCP queries.</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="udp-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) handling UDP queries.</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="background-workers">
      <type name="uint8">
	<range value="1..max"/>
      </type>
      <description>
	<text>
	  <h:p>Number of workers (threads) performing background
	  operations (zone loading, zone updates etc.).</h:p>
	  <h:p>Default: auto-selected value based on the number of
	  available CPU cores.</h:p>
	</text>
      </description>
    </leaf>
    <leaf name="tcp-idle-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="20"/>
      <description>
	<text>
	  Maximum idle time between requests on a TCP connection.
	</text>
      </description>
    </leaf>
    <leaf name="tcp-handshake-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="5"/>
      <description>
	<text>
	  Maximum delay of the first query after a TCP connection is
	  established.
	</text>
      </description>
    </leaf>
    <leaf name="tcp-reply-timeout">
      <type name="uint32"/>
      <units name="seconds"/>
      <default value="10"/>
      <description>
	<text>
	  Maximum time to wait for a reply to an SOA query.
	</text>
      </description>
    </leaf>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:server-options">  
    <leaf name="async-start">
      <type name="boolean"/>
      <default value="false"/>
      <description>
	<text>
	  Instructs the server to start asynchronously. Until zones
	  are loaded, queries are responded with SERVFAIL.
	</text>
      </description>
    </leaf>
  </augment>

  <augment target-node="/dnss:dns-server">
    <container name="control-socket">
      <description>
	<text>Address of the Knot DNS control socket.</text>
      </description>
      <choice name="socket-type">
	<description>
	  <text>The control socket can be either Unix domain socket
	  (default) or TCP/IP endpoint.</text>
	</description>
	<default value="unix"/>
	<leaf name="unix">
	  <type name="dnss:fs-path"/>
	  <default value="knot.sock"/>
	  <description>
	    <text>
	      <h:p>Filename of the Unix domain socket.</h:p>
	      <h:p>A relative name is prepended with the directory
	      specified in 'dnss:run-time-dir'.</h:p>
	    </text>
	  </description>
	</leaf>
	<case name="network">
	  <description>
	    <text>Address of the network socket.</text>
	  </description>
	  <uses name="dnss:endpoint-address">
	    <refine target-node="port">
	      <default value="5553"/>
	    </refine>
	  </uses>
	</case>
      </choice>
    </container>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:zones/dnss:template">
    <uses name="knot:zone-options"/>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:zones/dnss:template/dnss:dnssec">
    <uses name="auto-dnssec-options"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:template/dnss:query-module">
    <when condition="dnss:type = 'knot:dnstap'"/>
    <uses name="dnstap-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:template/dnss:query-module">
    <when condition="dnss:type = 'knot:synth-record'"/>
    <uses name="synth-record-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:template/dnss:query-module">
    <when condition="dnss:type = 'knot:dnsproxy'"/>
    <uses name="dnsproxy-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:template/dnss:query-module">
    <when condition="dnss:type = 'knot:rosedb'"/>
    <uses name="rosedb-config"/>
  </augment>
  
  <augment target-node="/dnss:dns-server/dnss:zones/dnss:zone">
    <uses name="knot:zone-options"/>
  </augment>

  <augment target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnss:dnssec">
    <uses name="auto-dnssec-options"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnss:query-module">
    <when condition="dnss:type = 'knot:dnstap'"/>
    <uses name="dnstap-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnss:query-module">
    <when condition="dnss:type = 'knot:synth-record'"/>
    <uses name="synth-record-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnss:query-module">
    <when condition="dnss:type = 'knot:dnsproxy'"/>
    <uses name="dnsproxy-config"/>
  </augment>
  
  <augment
      target-node="/dnss:dns-server/dnss:zones/dnss:zone/dnss:query-module">
    <when condition="dnss:type = 'knot:rosedb'"/>
    <uses name="rosedb-config"/>
  </augment>
  
</module>
